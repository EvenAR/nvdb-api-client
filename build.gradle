apply plugin: "java"
apply plugin: "idea"
apply plugin: "maven-publish"
apply from: "gradle/git.gradle"
apply from: "gradle/versioning.gradle"

repositories {
    mavenCentral()
    maven {
	url 'http://jcenter.bintray.com'
    }
    mavenLocal()
}

group = "no.vegvesen.nvdb"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"

dependencies {
    compile "com.google.code.gson:gson:2.8.0"
    compile "org.slf4j:slf4j-api:1.7.25"
    compile "com.google.guava:guava:21.0"


    compile "org.glassfish.jersey.core:jersey-client:2.25.1"
    compile "org.glassfish.jersey.connectors:jersey-apache-connector:2.25.1"

    testCompile "junit:junit:4.12"
    testCompile 'ch.qos.logback:logback-site:1.2.2'
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
	    artifactId 'nvdb-api-client'

            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}

task writeBuildInfo {
    doLast {
        Properties properties = new Properties();
        properties.put("git.branch", git_branch);
        properties.put("git.hash", git_shorthash);
        properties.put("git.date", git_date.toString());
        properties.put("build.version", version);
        properties.put("build.date", build_date.toString());
        properties.put("build.builder", build_builder.toString());

        def resourceDir = new File("${buildDir}/resources/main/")
        resourceDir.mkdirs()
        new File(resourceDir, "build.properties").withWriter { writer ->
            properties.store(writer, null)
        }
    }
}

processResources.dependsOn(writeBuildInfo)
